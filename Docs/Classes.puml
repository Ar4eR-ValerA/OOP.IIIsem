@startuml

class BackupJob {
    + StorageMode StorageMode
    - IJobObject JobObject
    - RestorePoint[] RestorePoints
    
    + RestorePoint Archive(string name)
}

interface IJobObject {
    + FileInfo[] GetFiles()
}

package JobObjects {
    class FilesJobObject {
        + FileInfo[] FileInfos
    }
    
    class FileJobObject {
        + FileInfo FileInfo
    }
    
    class DirectoryJobObject {
        + DirectoryInfo DirectoryInfo
    }
}

class RestorePoint {
    ~ FileInfo[] LocalFileInfos
    ~ IStorage[] Storages
    - string Name
}

interface IStorage {
    + FileInfo[] GetFiles()
}

package Archivers {
    class ZipArchiver {
        + void Archive(FileInfo[] FileInfos, string path)
    }
}

interface IArchiver {
    + void ArchiveSingleMode(FileInfo[] FileInfos, string path)
    + void ArchiveSplitMode(FileInfo[] FileInfos, string path)
}

class ArchiveService {
    + IArchiver Archiver
    
    + ArchiveSingleMode(RestorePoint restorePoint, string path)
    + ArchiveSplitMode(RestorePoint restorePoint, string path)
}

package Storages {
    class FileStorage {
        FileInfo FileInfo
    }
    
    class DirectoryStorage {
        DirectoryInfo DirectoryInfo
    }
}

BackupJob o-- RestorePoint
RestorePoint o-- IStorage
BackupJob o-- IJobObject
RestorePoint <--> ArchiveService
JobObjects <|- IJobObject
IStorage --|> Storages
IArchiver -o ArchiveService
IArchiver --|> Archivers

@enduml