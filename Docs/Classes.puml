@startuml

hide empty members

package Backups {
    class BackupJob {
        + StorageMode StorageMode
        - IJobObject JobObject
        - RestorePoint[] RestorePoints
        
        + RestorePoint Archive(string name)
    }
    
    interface IJobObject {
        + FileInfo[] GetFiles()
    }
    
    package JobObjects {
        class FilesJobObject {
            + FileInfo[] FileInfos
        }
    }
    
    class RestorePoint {
        ~ FileInfo[] LocalFileInfos
        ~ IStorage[] Storages
        - string Name
    }
    
    interface IStorage {
        + FileInfo[] GetFileInfos()
    }
    
    package Archivers {
        class ZipArchiver {
            + void ArchiveSingleMode(FileInfo[] FileInfos, string path)
            + void ArchiveSplitMode(FileInfo[] FileInfos, string path)
        }
    }
    
    interface IArchiver {
        + void ArchiveSingleMode(FileInfo[] FileInfos, string path)
        + void ArchiveSplitMode(FileInfo[] FileInfos, string path)
    }
    
    class LocalArchiveService {
        + IArchiver Archiver
        
        + ArchiveSingleMode(RestorePoint restorePoint, string path)
        + ArchiveSplitMode(RestorePoint restorePoint, string path)
    }
    
    package Storages {
        class FileStorage {
            + FileInfo FileInfo
        }
        
        class DirectoryStorage {
            + DirectoryInfo DirectoryInfo
        }
    }
}

package Backups.Client {
    class ServerArchiveService {
        + IArchiver Archiver
        + IPAddress IpAddress
        + int Port
                
        + ArchiveSingleMode(RestorePoint restorePoint, string path)
        + ArchiveSplitMode(RestorePoint restorePoint, string path)
    }
    
    package ServerStorages {
        class FileServerStorage {
            + FileInfo FileInfo
            + IPAddress IpAddress
            + int Port
            
            + FileInfo[] GetFileInfos()
        }
    }
    
    interface IServerStorage {
        + FileInfo[] GetFileInfos()
        + IPAddress IpAddress
        + int Port
    }
    
    class FileSender {
        + void SendFile(FileInfo localFileInfo, FileServerInfo fileServerStorage)
    }
}

package Backups.Server {
    class Taker {
        + void TakeFile(int port)
    }
}

interface IArchiveService {
    + IArchiver Archiver
    
    + ArchiveSingleMode(RestorePoint restorePoint, string path)
    + ArchiveSplitMode(RestorePoint restorePoint, string path)
}

BackupJob o-- RestorePoint
RestorePoint o-- IStorage
BackupJob o-- IJobObject
RestorePoint <--> LocalArchiveService
JobObjects <|-- IJobObject
IStorage --|> Storages
IArchiver -o LocalArchiveService
IArchiver --|> Archivers
Backups --> Backups.Client
Backups.Client --> Backups.Server

ServerArchiveService <-- IServerStorage
ServerArchiveService <-- FileSender
IServerStorage --|> ServerStorages

IArchiveService ..> LocalArchiveService
IArchiveService ..> ServerArchiveService


@enduml